<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_octorok_green</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>obj_par_enemy</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// create [mostly stolen from obj_octorok]
event_inherited();
hp = 2;
damage = 4;
timer = 0;
state = "MOVING";
facing = enum_facing.up;
move_speed = 0.4;

normal_sprite = spr_octorok_green;
normal_sprite_speed = 0.2;
hurt_sprite = spr_octorok_hurt;
hurt_sprite_speed = 0.4;

vx = 0;
vy = 0;
cx = 0;
cy = 0;

/// enemy specific vars
manic_timer = 30;
manic = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>event_inherited();
if (!active) exit;

switch(state) {
    case "MOVING": {
        switch (facing) {
            case enum_facing.up: {
                vx = 0;
                vy = -move_speed;
                break;
            }
            case enum_facing.right: {
                vx = move_speed;
                vy = 0;
                break;
            }
            case enum_facing.down: {
                vx = 0;
                vy = move_speed;
                break;
            }
            case enum_facing.left: {
                vx = -move_speed;
                vy = 0;
                break;
            }
        }
        
        if (irandom(100) &lt; 1) {
            facing = choose(enum_facing.up, enum_facing.right, enum_facing.down, 
                            enum_facing.left);
        }
        image_angle = facing - 90;
        
        manic_timer--;
        if (manic_timer &lt;= 0) {
            manic = !manic;
            if (manic) manic_timer = 90;
            else manic_timer = 180;
        }
        
        if (manic) {
            normal_sprite_speed = 0.4
            move_speed = 1.2;
        } else {
            normal_sprite_speed = 0.2;
            move_speed = 0.4;
        }
        break;
    }
}

if (check_collision_obj(vx, vy, obj_solid)) {
    facing = choose(enum_facing.up, enum_facing.right, enum_facing.down, 
                enum_facing.left);
    image_angle = facing - 90;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
